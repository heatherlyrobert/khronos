.TH khronos 1 2010-Dec "linux" "command-line initiation, use, and options"

.SH NAME
.B khronos
- time-based batch automation and job scheduling

.SH PATRON
.B khronos-anileis (merciless)
god of creation and unyielding time

.SH IMAGERY
winged serpent (drakon) with the heads of a bull, a lion, and a man

.SH SUMMARY
khronos is a personal, simplified, traceable, and technical version of the
classic posix-defined crond time-based job scheduler that strips away modern
cruftiness and targets transparency and maintainability.

.SH DOCUMENTATION FILES (see also)
.nf  
.B khronos (1)········command-line initiation, use, and options
khronos (5)        structure of config, files, and streams
khronos (7)        decision rationale, scope, and objectives

.SH TABLE OF CONTENTS
.nf  
a) synopsis        standard command line overview
b) overview        general overview of program
c) user-mode       detailed command line options
d) daemon-mode     detailed command line options
e) debugging       logging, debugging, and tracing

.SH A) SYNOPSIS
.nf
.B khronos [OPTIONS]
.nf
   the primary production version
.sp
.B khronos_debug [URGENTS] [OPTIONS]
.nf
   performs all production actions, but with debugging and tracing

.SH B) GENERAL OVERVIEW
.B primarily,
khronos is a daemon (see DAEMON-MODE).  a time-based scheduler specificially.
normally sleeping, it periodically wakes, checks its requested jobs, launches
those that are scheduled, checks for completion of already running jobs,
then goes back to sleep.  that's it.

since khronos depends entirely on the contents of installed crontab files
(see man 5), it may be launched, killed, replaced, updgraded, and restarted
with zero data loss.  BUT, if it is not running when a particular job should
have launched, that opportunity is lost.

.B secondarily,
khronos administers its own environment.  when launched with any of the
user-mode options (see USER-MODE) it allows users to verify, install, check,
audit, and remove crontabs to/from its central location.  in user-mode,
khronos exits after performing its task without upsetting the daemon version.

if you attempt to mix daemon-mode and user-mode actions, the program will
simply quit with an informative, but insulting, error message ;)

.SH C) USER-MODE
executing
.B khronos
at the command line with any of the options below causes the program to be
in user-mode.  to understand crontabs, their contents, and locations please
refer to 
.B khronos(5).

all options below provide a consistent return code of 0 for success and <0
for failure.  base options are completely silent and perfect for scripts.
confirm options provide a single text line indicating SUCCESS or FAILURE,
because silence can hide a lot ;) verbose option are very detailed and
excellent for crontab/input problem solving.

.SS local crontabs
all local crontabs MUST be stored at or below the users home directory (even
root's).  only the user owning the home directory may install those files,
except root can install any users crontabs.

.B --verify [file]
.RS 3
quietly reviews a crontab file for security and quality, but does not
install it for execution.
.RE

.B --cverify [file]
.RS 3
same as --verify, but provides a single line of feedback on the first error
or a success message.  helpful for assurance.
.RE

.B --vverify [file]
.RS 3
same as --verify, but provides all the detailed feedback from the --verify
process also.
.RE

.SS incomming crontabs
all local crontabs MUST be stored at or below the users home directory (even
root's).  only the user owning the home directory may install those files,
except root can install any users crontabs.

.B --install [file]
.RS 3
quietly performs the --verify process, only providing fatal errors; if it
passes, then installs it in a central location for execution.
.RE

.B --cinstall [file]
.RS 3
same as --install, but provides a single line of feedback on the first error
or a success message.  helpful for assurance.
.RE

.B --vinstall [file]
.RS 3
same as --install, but provides all the detailed feedback from the --verify
and --install processes also.
.RE

.SS central/installed crontabs
users may only list or check their own crontabs, except root who may list or
check all.

.B --list
.RS 3
provides a single column list of all crontabs installed in the central
location for execution.
.RE

.B --check [file]
.RS 3
quietly reviews an installed crontab file for security and quality, to
ensure it is in working order.
.RE

.B --ccheck [file]
.RS 3
same as --check, but provides a single line of feedback on the first error
or a success message.  helpful for assurance.
.RE

.B --vcheck [file]
.RS 3
same as --check, but provides all the detailed feedback from the --check
process.
.RE

.SS central/security review
an audit can only be performed by root.

.B --audit
.RS 3
quietly reviews all installed crontabs and the security environment, to
ensure it is in working order.
.RE

.B --caudit
.RS 3
same as --audit, but provides a single line of feedback for each installed
crontab as well as the environment.
.RE

.B --vaudit
.RS 3
same as --audit, but provides all the detailed feedback from the --audit
and security check process.
.RE

.SS central/outgoing crontabs
users may only remove their own crontabs, except root who may remove any or
all crontabs.

.B --remove [file]
.RS 3
quietly preforms --check; if it passes, the crontab is retired from execution
and removed from the central directory.
.RE

.B --cremove [file]
.RS 3
same as --remove, but provides a single line of feedback on the first error
or a success message.  helpful for assurance.
.RE

.B --vremove [file]
.RS 3
same as --remove, but provides all the detailed feedback from the --check
and --remove processes also.
.RE

.SS daemon control
only root may request the daemon to reload the contab files.

.B --reload
.RS 3
sends the executing daemon a instant message to purge itself and reload all
crontabs with the most recent version.
.RE

.SS disallowed options
khronos is modeled after cron and posix with respect for many other options
available.  as such, i may have adapted, but there are some options which i
have specifically not provided as i deem them security or traceability risks.

.B -
.RS 3
NOT ALLOWED.  in posix, this allowed a user to install their crontab from
stdin, zero source/tracing -- no traceability.
.RE

.B -e [file]
.RS 3
NOT ALLOWED.  in posix, this allowed a user to immediately edit an installed
crontab, no backup -- no traceability
.RE

.B -u [user]
.RS 3
NOT NEEDED.  in posix, this allowed the super-user to act for another user
which is automatically supported in khronos.
.RE

.SH D) DAEMON-MODE
if khronos is launched with no user-mode options, it will automatically
become a daemon, if another instance is not already running.  only root
can launch the daemon.

to refresh the data from the central directory, either terminate khronos and
relaunch, or use the user-mode option of --reload.

.SS main options

.B --aggressive
.RS 3
kill long-running jobs according to job control flags.
.RE

.B --busy-codes
.RS 3
react to administrator busy-codes to push work back and forth.
.RE

.B --khaos
.RS 3
produce update file for khaos machine monitor.
.RE

.SS general server/network

.B --clustering
.RS 3
ability to treat multiple machines as a single instance.
.RE

.B --multi-node
.RS 3
coordinate with all local network khronos instances.
.RE

.B --external
.RS 3
abilty to coordinate with non-local instances.
.RE

.B --hardened
.RS 3
taking a stricter security stance.
.RE

.B --threaded
.RS 3
support for multi-threaded processes.
.RE

.SS temporary options

.B --catch-up [HH]
.RS 3
catch up jobs labeled absolute/need since the hour HH (24 hour reference)
running them sequentially until complete.
.RE

.B --shift [HH] [HH] [HH]
.RS 3
move work between HH and HH till HH.  this is dangerous.
.RE

.SS disallowed options
khronos is modeled after cron and posix with respect for many other options
available.  as such, i may have adapted, but there are some options which i
have specifically not provided as i deem them security or traceability risks.

.B -c [dir]
.RS 3
NOT ALLOWED.  in posix, this allowed the super-user to change the central
crontab directory -- huge security risk.
.RE

.B -m [command]
.RS 3
NOT NEEDED.  in posix, this changed the mail command for crond to send email
updates, khronos will never use email -- clumsy.
.RE

.B -s
.RS 3
NOT NEEDED.  in posix, this changed the update output from email to the
system log, khronos will never use the syslog -- clumsy.
.RE

.B -i
.RS 3
NOT NEEDED.  in posix, this disabled inotify support.  khronos refuses any
inotify involvement -- crutch and complex.
.RE

.SH E) DEBUGGING
.B khronos_debug
launches the daemon with heatherly debugging and logging.  all the
same options are available and debug can be either daemon-mode or user-mode.

khronos_debug only uses the universal yURG urgents, so please see yURG and yLOG
for details of the options and output.

.SH AUTHOR
heatherlyrobert at gmail dot com

.SH COLOPHON
this page is part of a documentation package meant to make use of the
heatherly tools easier and faster

